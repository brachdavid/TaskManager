@page "/my-clients"

@using Microsoft.EntityFrameworkCore
@using TaskManager.Models
@inject ApplicationDbContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<TeamMember> UserManager

<PageTitle>@Title</PageTitle>
<SectionContent SectionName="page-title">@Title</SectionContent>

@if (!isAuthorized)
{
    <p class="text-danger">You do not have permission to access this page.</p>
}
else if (clients == null)
{
    <p>Loading clients...</p>
}
else if (!clients.Any())
{
    <p>You have no clients assigned.</p>
}
else
{
    <div class="container mt-4">
        <div class="row justify-content-center">
            @foreach (var client in clients)
            {
                <div class="col-12 col-sm-6 col-lg-3 mb-4">
                    <div class="card h-100">
                        <div class="card-body text-center">
                            <h5 class="card-title mb-3">@client.Name</h5>
                            <p class="card-text"><strong>Industry:</strong> @client.Industry.GetDisplayName()</p>
                            <a href="/client/@client.Id" class="btn btn-primary mt-3">
                                <span class="bi bi-eye me-1"></span> View Profile
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    public string Title { get; private set; } = "My Clients";

    private List<Client> clients = new();
    private bool isAuthorized = false;

    protected override async Task OnInitializedAsync()
    {
        // Získání přihlášeného uživatele
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);

        // Pokud uživatel není přihlášený, přesměrujeme na odmítnutí přístupu
        if (user == null)
        {
            return;
        }

        // Získání rolí uživatele
        var roles = await UserManager.GetRolesAsync(user);
        isAuthorized = roles.Contains("ProjectManager");

        if (isAuthorized)
        {
            // Načtení klientů, kteří mají přiřazeného projektového manažera s ID přihlášeného uživatele
            clients = await DbContext.Clients
                .Where(c => c.ProjectManagerId == user.Id)
                .ToListAsync();
        }
    }
}
